// SPDX-License-Identifier: Apache-2.0
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.5.0. SEE SOURCE BELOW. !!
pragma solidity >=0.5.0;

interface FileSystem {
    event CreatedFile(bytes32 id, bytes32 root);

    function addContractFile(
        string calldata name,
        uint256 size,
        address _address,
        bytes32 root,
        uint256 nonce
    ) external returns (bytes32);

    function addIpfsFile(
        string calldata name,
        uint256 size,
        string calldata hash,
        bytes32 root,
        uint256 nonce
    ) external returns (bytes32);

    function addToBundle(uint256 nonce, bytes32 fid) external;

    function bundles(bytes32)
        external
        view
        returns (bytes32 codeFileId, bytes32 init);

    function calculateId(uint256 nonce) external view returns (bytes32);

    function containsNameHash(bytes32 bid, bytes32 hash)
        external
        view
        returns (bool);

    function createFileFromArray(
        string calldata name,
        uint256 nonce,
        bytes32[] calldata arr,
        uint256 sz
    ) external returns (bytes32);

    function createFileFromBytes(
        string calldata name,
        uint256 nonce,
        bytes calldata arr
    ) external returns (bytes32);

    function finalizeBundle(uint256 nonce, bytes32 codeFileID)
        external
        returns (bytes32);

    function forwardData(bytes32 id, address a) external;

    function getBytesData(bytes32 id) external view returns (bytes32[] memory);

    function getCodeFileId(bytes32 bid) external view returns (bytes32);

    function getCodeType(bytes32 id) external view returns (uint8);

    function getContractAddress(bytes32 id) external view returns (address);

    function getContractCode(bytes32 id) external view returns (bytes memory);

    function getFileList(bytes32 bid) external view returns (bytes32[] memory);

    function getFileType(bytes32 id) external view returns (uint256);

    function getFormattedBytesData(bytes32 id)
        external
        view
        returns (bytes memory);

    function getInitialHash(bytes32 bid) external view returns (bytes32);

    function getIpfsHash(bytes32 id) external view returns (string memory);

    function getName(bytes32 id) external view returns (string memory);

    function getNameHash(bytes32 id) external view returns (bytes32);

    function getRoot(bytes32 id) external view returns (bytes32);

    function getSize(bytes32 id) external view returns (uint256);

    function hashName(string calldata name) external pure returns (bytes32);

    function initialize() external;

    function setCodeRoot(
        uint256 nonce,
        bytes32 codeRoot,
        uint8 codeType,
        uint8 stackSize,
        uint8 memorySize,
        uint8 globalsSize,
        uint8 tableSize,
        uint8 callSize
    ) external;

    function vmParameters(bytes32)
        external
        view
        returns (
            bytes32 codeRoot,
            uint8 codeType,
            uint8 stackSize,
            uint8 memorySize,
            uint8 globalsSize,
            uint8 tableSize,
            uint8 callSize
        );
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"root","type":"bytes32"}],"name":"CreatedFile","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"addContractFile","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"string","name":"hash","type":"string"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"addIpfsFile","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes32","name":"fid","type":"bytes32"}],"name":"addToBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"bundles","outputs":[{"internalType":"bytes32","name":"codeFileId","type":"bytes32"},{"internalType":"bytes32","name":"init","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"calculateId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"bid","type":"bytes32"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"containsNameHash","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes32[]","name":"arr","type":"bytes32[]"},{"internalType":"uint256","name":"sz","type":"uint256"}],"name":"createFileFromArray","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"arr","type":"bytes"}],"name":"createFileFromBytes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes32","name":"codeFileID","type":"bytes32"}],"name":"finalizeBundle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"a","type":"address"}],"name":"forwardData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getBytesData","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"bid","type":"bytes32"}],"name":"getCodeFileId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getCodeType","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getContractAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getContractCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"bid","type":"bytes32"}],"name":"getFileList","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getFileType","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getFormattedBytesData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"bid","type":"bytes32"}],"name":"getInitialHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getIpfsHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getNameHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"hashName","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes32","name":"codeRoot","type":"bytes32"},{"internalType":"uint8","name":"codeType","type":"uint8"},{"internalType":"uint8","name":"stackSize","type":"uint8"},{"internalType":"uint8","name":"memorySize","type":"uint8"},{"internalType":"uint8","name":"globalsSize","type":"uint8"},{"internalType":"uint8","name":"tableSize","type":"uint8"},{"internalType":"uint8","name":"callSize","type":"uint8"}],"name":"setCodeRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"vmParameters","outputs":[{"internalType":"bytes32","name":"codeRoot","type":"bytes32"},{"internalType":"uint8","name":"codeType","type":"uint8"},{"internalType":"uint8","name":"stackSize","type":"uint8"},{"internalType":"uint8","name":"memorySize","type":"uint8"},{"internalType":"uint8","name":"globalsSize","type":"uint8"},{"internalType":"uint8","name":"tableSize","type":"uint8"},{"internalType":"uint8","name":"callSize","type":"uint8"}],"stateMutability":"view","type":"function"}]
*/
